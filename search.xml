<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Java（三）数据类型补充</title>
      <link href="/2022/04/10/Java%EF%BC%88%E4%B8%89%EF%BC%89%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E8%A1%A5%E5%85%85/"/>
      <url>/2022/04/10/Java%EF%BC%88%E4%B8%89%EF%BC%89%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E8%A1%A5%E5%85%85/</url>
      
        <content type="html"><![CDATA[<h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><h4 id="整数型"><a href="#整数型" class="headerlink" title="整数型"></a>整数型</h4><table><thead><tr><th>数据类型</th><th>占用空间大小</th><th>默认值</th><th>取值范围</th></tr></thead><tbody><tr><td>byte</td><td>1</td><td>0</td><td>[-128~127]</td></tr><tr><td>short</td><td>2</td><td>0</td><td>[-32768~32767]</td></tr><tr><td>int</td><td>4</td><td>0</td><td>[-2147483648~2147483647]</td></tr><tr><td>long</td><td>8</td><td>0L</td><td></td></tr></tbody></table><p>1、java语言当中的“整数型字面值”被默认当做int类型来处理。要让这个“整数型字面值”被当做long类型执行的话，需要在“整数型在面试”后面添加l&#x2F;L，建议用大写的L<br>2、java语言当中的整数型字面值有三种表示方式：<br>    第一种：十进制【默认的方式】<br>    第二种：八进制【在编写八进制整数型字面值的时候需要以0开始】<br>    第三种：十六进制【在编写十六进制整数型字面值的时候余姚以0x开始】</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">010</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//整数型字面值以0开头的，一般表示八进制</span><span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token number">0x10</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//整数型字面值以0x开头的，一般表示十六进制</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//输出10</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//输出8</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//输出16</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>注意：输出的时候都是以十进制的形式<br>&#96;&#96;&#96;java<br>int i &#x3D; 123;<br>&#x2F;&#x2F;整数型字面值123和变量i都是int类型<br>&#x2F;&#x2F;将int类型的123赋值给int类型的变量i，不存在类型转换<br>System.out.println(i);<br>long x &#x3D; 456;<br>&#x2F;&#x2F;整数型字面值456赋值给long类型的x，存在类型转换<br>&#x2F;&#x2F;int类型占4个字节，long占8个字节<br>&#x2F;&#x2F;小容量可以自动转换成大容量，称为自动类型转换机制。<br>System.out.println(x);<br>long y &#x3D; 2147483647;<br>System.out.println(y);&#x2F;&#x2F;运行正确<br>&#x2F;*<br>long z &#x3D; 214748648;&#x2F;&#x2F;214748648被当做int字节处理，但是其字面值超出int类型范围<br>System.out.println(z);&#x2F;&#x2F;运行错误</li></ul><p>*&#x2F;<br>&#x2F;&#x2F;解决办法：将其当做long类型处理，在字面值后面面添加L<br>long z &#x3D; 214748648;<br>System.out.println(z);&#x2F;&#x2F;不存在类型转换，运行正确</p><pre><code>* 大容量不能直接转换成小容量，需要加上“强制类型转换符”，但是这样可能会造成精度损失。```javalong k = 2147483648L;int  e = (int)k;System.out.println(e);//结果为-2147483648，损失精度非常严重</code></pre><ul><li>强转原理：<br>例如：8个字节的int类型转换成4个字节的long就是将int类型的左边的4个字节删掉，就会得到4个字节的long类型。</li><li>特例：<br><font color = red>当一个字面值不超过byte、short、char类型的取值范围，这个字面值可以直接转换成对应的类型。</font><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//举例</span><span class="token keyword">byte</span> a1 <span class="token operator">=</span> <span class="token number">127</span><span class="token punctuation">;</span>运行正确<span class="token keyword">byte</span> a2 <span class="token operator">=</span> <span class="token number">128</span><span class="token punctuation">;</span>运行错误，需要在<span class="token number">128</span>前面加强制类型转换符<span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span><span class="token punctuation">,</span>编译会损失精度转换之后输出a2是<span class="token operator">-</span><span class="token number">128</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>精度损失<br>计算机在存储数据是都是存的补码，输出是将补码转换成原码，</li><li>求给定数值的补码<br>正数：<br>正整数的补码与原码相同<br>负数：<br>将其对应正数的二进制所有位取反后加1<h4 id="浮点型"><a href="#浮点型" class="headerlink" title="浮点型"></a>浮点型</h4><table><thead><tr><th>float</th><th>单精度</th><th>4个字节</th></tr></thead><tbody><tr><td>double</td><td>双精度</td><td>8个字节</td></tr></tbody></table></li><li>注意：double 和 float 在计算机内部二进制储存的时候都是储存的浸近似值（无法储存无限的小数）</li></ul><p>在java语言中所有的浮点型字面值，默认被当做double类型来处理，要想该字面值当做float类型来处理，需要在字面值的后面添加F&#x2F;f</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">double</span> b1 <span class="token operator">=</span> <span class="token number">3.0</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//不存在类型转换，编译正确</span><span class="token keyword">float</span> b2 <span class="token operator">=</span> <span class="token number">4.0</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//编译错误</span><span class="token comment" spellcheck="true">//修改错误有以下两种方法</span><span class="token keyword">float</span> b3 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token number">4.0</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//强制转换</span><span class="token keyword">float</span> b4 <span class="token operator">=</span> <span class="token number">4.0f</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//不存在类型转换，4.0就是flaot类型</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="布尔型"><a href="#布尔型" class="headerlink" title="布尔型"></a>布尔型</h4><table><thead><tr><th>booolean：</th><th>true</th><th>false</th></tr></thead><tbody><tr><td>底层储存</td><td>1</td><td>0</td></tr></tbody></table><p>布尔类型占用一个字节，但是在实际开发中非常重要，经常使用在逻辑运算和条件控制语句中。</p><h4 id="转换规则"><a href="#转换规则" class="headerlink" title="转换规则"></a>转换规则</h4><p>关于基本数据类型之间的互相转换：</p><p>1、八种基本数据类型当中除了布尔类型之外剩下的7种类型之间都可以互相转换<br>2、小容量向大容量转换，称为自动类型转换<br>&amp;ensp;&amp;ensp;&amp;ensp;容量从小到大排序为：<br>&amp;ensp;&amp;ensp;&amp;ensp;byte &lt; short &lt; int &lt; long &lt; float &lt; double<br>&amp;ensp;&amp;ensp;&amp;ensp;注意：任何浮点类型不管占用多少个字节，都比整数型容量大<br>&amp;ensp;&amp;ensp;&amp;ensp;char和short可以表示的种类数量相同，但是char可以取更大的正整数<br>3、大容量向小容量转换，叫做强制类型转换，需要加强制类型转换符，运行阶段可能会损失精度，谨慎使用<br>4、当整数字面值没有超过byte、short、char类型的取值范围，这个字面值可以直接赋值给byte、short、char类型的变量。<br>5、byte、short、char混合运算的时候，各自先转换成int类型在做运算。<br>6、多种数据类型混合运算，先转换成容量最大的那种类型再做运算。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctf（vip限免）WP</title>
      <link href="/2022/04/09/ctf%EF%BC%88vip%E9%99%90%E5%85%8D%EF%BC%89WP/"/>
      <url>/2022/04/09/ctf%EF%BC%88vip%E9%99%90%E5%85%8D%EF%BC%89WP/</url>
      
        <content type="html"><![CDATA[<h2 id="源码泄露"><a href="#源码泄露" class="headerlink" title="源码泄露"></a>源码泄露</h2><p>看题就是要我们看源码，在浏览器里 Ctrl + U 直接查看网页源码，这里也是可以直接看到flag<br><img src="https://img-blog.csdnimg.cn/cb7b532e92b249ec8e4f8f7d705884ba.png"></p><h2 id="前台JS绕过"><a href="#前台JS绕过" class="headerlink" title="前台JS绕过"></a>前台JS绕过</h2><p>这个题就是不能用F12进行查看源码了，我们的 Ctrl + U 还是可以用的，直接可以得到flag<br><img src="https://img-blog.csdnimg.cn/dc3a5f5b88244e95b2a8cb668b60715b.png"></p><h2 id="协议头信息泄露"><a href="#协议头信息泄露" class="headerlink" title="协议头信息泄露"></a>协议头信息泄露</h2><p>题目提示要我们抓包，那就抓，抓完这样，什么也没看到<br><img src="https://img-blog.csdnimg.cn/e5b754dd872a4c709b9613b1bfb6999e.png"><br>上网搜搜原来是要查看响应头，才能得到flag，记录一下查看步骤，一免以后忘记<br>先点图示位置<br><img src="https://img-blog.csdnimg.cn/311432001e6e4e3e840b659851d214bb.png"><br>这里点击 Repeater 再点 Go ，就可以在右边看到flag<br><img src="https://img-blog.csdnimg.cn/28c19fc2d7554aa583fbefc24d642b4e.png"></p><h2 id="robots后台泄露"><a href="#robots后台泄露" class="headerlink" title="robots后台泄露"></a>robots后台泄露</h2><p>robots之前做过，就是在网站后面加上 &#x2F;robots.txt 看他的目录，就可以得到flag<br><img src="https://img-blog.csdnimg.cn/831b09588f794424a483c375fa051a1e.png"><br><img src="https://img-blog.csdnimg.cn/a8d9769d48f0477691a1e763069f8205.png"></p><h2 id="phps源码泄露"><a href="#phps源码泄露" class="headerlink" title="phps源码泄露"></a>phps源码泄露</h2><p>上网搜phps源码大概知道了phps文件就是php的源码文件，通常用于提供给用户查看php代码，但是因为用户无法直接通过Web浏览器查看php文件的内容，所以用phps文件代替。大概就是要我们查看phps文件所以直接在网址后面加 &#x2F;index.phps ，下载phps文件后打开，可以看到fag<br><img src="https://img-blog.csdnimg.cn/97ea6482b4aa47c3a2c08379c3e1b23e.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/357a9d50b1c14dbbbfd4591ce65d4764.png"></p><h2 id="源码压缩包泄露"><a href="#源码压缩包泄露" class="headerlink" title="源码压缩包泄露"></a>源码压缩包泄露</h2><p>访问<a href="http://www.zip得到一个压缩包,看到一个flag,提交后提示错误,肯定是假的.又看了第二个文件,里面也没有flag,但是我们可以看到信息,关于flag的/">www.zip得到一个压缩包，看到一个flag，提交后提示错误，肯定是假的。又看了第二个文件，里面也没有flag，但是我们可以看到信息，关于flag的</a><br><img src="https://img-blog.csdnimg.cn/e2186592924e449e8d81efd50e6763c3.png"><br>那么就直接访问fl000g.txt得到flag<br><img src="https://img-blog.csdnimg.cn/f97c4274e23a4c5c96d03dc1a21589c3.png"></p><h2 id="版本控制泄露源码"><a href="#版本控制泄露源码" class="headerlink" title="版本控制泄露源码"></a>版本控制泄露源码</h2><p>不知道这是啥，搜到的大概是这样<br><img src="https://img-blog.csdnimg.cn/b8079cb4a9f84084ad4fa08824d8e661.png"><br>就访问.git看看，直接得到flag<br><img src="https://img-blog.csdnimg.cn/ac0c7731ebee4c729a51b90f1984420e.png"></p><h2 id="版本控制泄露源码2"><a href="#版本控制泄露源码2" class="headerlink" title="版本控制泄露源码2"></a>版本控制泄露源码2</h2><p>这次访问.git 发现并没有得到flag ，那就试试.svn居然又得到flag了<br><img src="https://img-blog.csdnimg.cn/e318bbbbc2164a3b9c3d4101c718e98d.png"></p><h2 id="vim临时文件泄露"><a href="#vim临时文件泄露" class="headerlink" title="vim临时文件泄露"></a>vim临时文件泄露</h2><p>搜vim临时文件得知</p><ul><li>Vim是从 vi 发展出来的文本编译器。</li></ul><p>看这个题的描述应该是有个什么文件的，需要我们去找一下。<br>搜集到的信息大概就是：</p><ul><li>vim意外退出的话，再次打开该文件就会提示存在一个.swp的隐藏文件，意味着该文件正在被编辑。</li></ul><p>所以我们访问index.php.swp就可以得到flag了<br><img src="https://img-blog.csdnimg.cn/c43b81871c7940efa4a56fb7bb2c2985.png"><br><img src="https://img-blog.csdnimg.cn/e1f272e8a5d04094a7755f04519adac3.png"></p><h2 id="cookie泄露"><a href="#cookie泄露" class="headerlink" title="cookie泄露"></a>cookie泄露</h2><p>抓包直接可以看到flag<br><img src="https://img-blog.csdnimg.cn/47734964fa4c48298b4fb750b6934dd8.png"></p><h2 id="域名txt记录泄露"><a href="#域名txt记录泄露" class="headerlink" title="域名txt记录泄露"></a>域名txt记录泄露</h2><p>在网上找个<a href="http://www.jsons.cn/nslookup/">在线域名解析</a>，解析后得到flag</p><h2 id="敏感信息公布"><a href="#敏感信息公布" class="headerlink" title="敏感信息公布"></a>敏感信息公布</h2><p>打开网站，访问 &#x2F;admin 弹出登陆窗口，根据题目的提示 大致就是，密码在页面上，看到最下面的手机号试试<br><img src="https://img-blog.csdnimg.cn/b182577567d84f9caafb518a9ac2c656.png"><br>登陆成功后就可以看到flag了<br><img src="https://img-blog.csdnimg.cn/7aad46c2ddb547eaad65fb6a8ce6290b.png"></p><h2 id="内部技术文档泄露"><a href="#内部技术文档泄露" class="headerlink" title="内部技术文档泄露"></a>内部技术文档泄露</h2><p>打开网站，题目是关于文档的，就找关于文档的东西，在最下面可以看到document，直接点进去<br><img src="https://img-blog.csdnimg.cn/47d1756ef9ac47749d9fd60098a134ba.png"><br>根据上面的后台地址，得知我们要访问 &#x2F;system1103&#x2F;login.php 来登陆，输入正确的账号密码就可以得到flag了<br><img src="https://img-blog.csdnimg.cn/70737f3db9a842f1852fc5c5e8a3eeb4.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java（二）语言基础</title>
      <link href="/2022/04/09/Java%EF%BC%88%E4%BA%8C%EF%BC%89%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/"/>
      <url>/2022/04/09/Java%EF%BC%88%E4%BA%8C%EF%BC%89%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<p>​<br>标识符<br>1、什么是标识符？</p><pre><code>    - 在java源程序中凡是程序员有权利自己命名的单词都是标识符    - 在EditPlus编译器中以黑色字体高亮显示    - 标识符可以标识 类名、方法名、变量名、接口名、常量名······</code></pre><p>2、标识符的命名规则【必须按照命名规则的语法来编写，否则编译器会报错】</p><pre><code>    - 一个合法的标识符只能有 数字、字母、下划线_、美元符号$ 组成，不能含有其它符号    - 不能数字开头    - 严格区分字母大小写    - 关键字不能做标识符 （关键字见下文）    - 理论上无长度限制，但是最好不要太长</code></pre><p>3、标识符的命名规范【只是一种规范，不属于语法，不遵守规范编译器不会报错】</p><pre><code>    - 最好见名知意            public class UserService&#123;                    public void login(String username,String password)&#123;                    &#125;            &#125;    - 遵守驼峰命名方式（单词首字母大写，便于区分）            SystemService            UseService            CustomerService    - 类名、接口名：首字母大写，后面每个单词首字母大写。    - 变量名、方法名：首字母小写，后面每个单词首字母大写。    - 常量名：全部大写</code></pre><p>关键字<br>        - 关键字在Java语言中全部是小写<br>        - 关键字在EditPlus编译器中以蓝色高亮显示<br>        - 常见的关键词：<br>                public                class                static                void<br>                if                        for                    while                do<br>                default               byte                  short                int<br>                long                   float                  double              boolean<br>                char                   private              protected          switch<br>                true                    false                 throw                 throws<br>                try                      catch                ······</p><p>字面值<br>        - 常见的字面值：<br>                10（整数型字面值）            3.14（浮点型字面值）                    ‘a’（字符型字面值）<br>                “abc”（字符串型字面值）    false、true（布尔型字面值）          ······<br>        - 字面值就是数据<br>        - 字面值是java源程序的组成部分之一，其还包括标识符，关键字</p><p>变量<br>1、什么是变量？</p><pre><code>    - 变量本质上是内存中的一块空间，这块空间“有数据类型”、“有名字”、“有字面值”。    - 变量包含三部分：数据类型、名称、字面值【数据】    - 变量是内存中储存数据的最基本的单元。</code></pre><p>2、数据类型的作用（起到指导的作用）</p><pre><code>    - 不同的数据有不同的类型，不同的数据类型底层会分配不同大小的哦空间。    - 数据类型可以指导程序在运行阶段应该分配多大的内存空间给变量。</code></pre><p>注意：变量中储存的具体的 “数据” 必须和变量的 “数据类型” 一致，否则编译报错。</p><p>3、声明&#x2F;定义变量的语法格式</p><pre><code>    - 数据类型 + 空格 + 变量名 + ;</code></pre><p>4、变量声明后赋值的语法格式</p><pre><code>    - 变量名 + = + 字面值 + ;</code></pre><p>数据类型<br>1、数据类型的作用</p><pre><code>            程序中当有很多数据，每一个数据都是有相关类型的，不同的数据类型的数据占用空间大小不同。            数据类型的作用是指导JVM在运行的时候给该数据分配多大的内存空间。</code></pre><p>2、基础数据类型</p><pre><code>            - 基本数据类型包括四大类八小种：                    第一类：整数型                            byte、short、int、long                    第二类：浮点型                            float、double                    第三类：布尔型                            boolean                    第四类：字符型                            char                                                   （&#39;\n&#39;在Java中表示一个换行符，属于char类型）                                    （&#39;\t&#39;在Java中表示一个制表符，属于char类型）</code></pre><p>3、引用数据类型（后续补充）</p><pre><code>            - 类            - 接口            - 数据            ··· ···    注意：字符串不属于基本数据类型，属于引用数据类型，而字符属于基本数据类型</code></pre><p>4、基本数据类型各自占用空间的大小</p><p>基本数据类型    占用空间大小【单位：字节】<br>        byte    1<br>        short    2<br>        int    4<br>        long    8<br>        float    4<br>        double    8<br>        boolean    1<br>        char    2<br>5、字节（byte）</p><pre><code>            - 1 Byte = 8 bit  【1个字节 = 8个比特位】                    一个比特位就是一个二进制位，例如一个0，或者一个1            - 1 KB = 1024 Byte            - 1 MB = 1024 KB            - 1 GB = 1024 MB            - 1 TB = 1024 GB    分析：整数型中的Byte类型占用1个字节，也就是8个比特位。                    Byte类型的最大值：01111111也就是【10000000减1】127                    Byte类型的最小值：-128【注意这个在计算机中存的不是11111111】                    Byte类型的取值范围：[-128 ~ 127]，可以表示256个不同的数字【256个二进制】            补充：关于java中的数字类型                    数字都是有正负之分的，所以在数字的二进制当中有一个二进制位称为“符号位”。                    这个“符号位”在所有二进制位的最左边，0便是正数，1表示负数。</code></pre><p>6、System.out.println()和System.out.print()的区别</p><pre><code>    - println()输出之后换行    - print()只输出，不换行            补充：转义字符反斜杠“ \ ”，&#39;\n&#39;表示换行，&#39;\t&#39;表示制表符 </code></pre><p>进制换算<br>        - 十进制转二进制</p><pre><code>            例如98转二进制：                    在64  32  16  8  4  2  1  中98可以看做是64 + 32 + 2，占用对应位为1，其余位为0                    即 1    1    0   0  0  1  0  就是98转换成的二进制            也可以用除2的方法进行换算（知道即可，不必深究）    - 二进制转十进制            例如1101011转十进制：                    此二进制数有7位分别是 64  32  16  8  4  2  1（分别是2的6 5 4 3 2 1 0次方）                    对应位置是1的数相加得到此十进制数为 64 + 32 + 8 + 2 + 1 也就是107</code></pre><p>字符编码<br>        - 最先出现的字符编码方式：ASCII码 （采用一个字节编码）<br>        - 支持简体中文的编码方式：GB2312 &lt; GBK &lt; GB18030<br>        - 支持全国所有文字的编码方式：unicode编码<br>                java语言采用unicode编码方式，所以“标识符”可以用中文。<br>        - 在java根目录上的bin文件下有一个native2ascii.exe命令可以将中文转换成unicode码</p><p>​<img src="https://img-blog.csdnimg.cn/0059c7b3d60849d1b85570f596f78e90.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAc2VyZWlud2U=,size_17,color_FFFFFF,t_70,g_se,x_16"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctf（WP）</title>
      <link href="/2022/04/09/ctf%EF%BC%88WP%EF%BC%89/"/>
      <url>/2022/04/09/ctf%EF%BC%88WP%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h4 id="金三胖"><a href="#金三胖" class="headerlink" title="金三胖"></a>金三胖</h4><p>下载解压，直接保存所有图片，看到flag大概是hello hongke经过不断尝试，把字母o改成数字0，加空格该大写什么的，终于知道了原来是hello中间的两个ll是数字11</p><h4 id="二维码"><a href="#二维码" class="headerlink" title="二维码"></a>二维码</h4><p>打开二维码，用识别工具识别一下再用010打开这个二维码，可以看到明显的zip文件的格式开头<img src="https://img-blog.csdnimg.cn/37f97c5aeca4439790a422ba8143a0fe.png" alt="在这里插入图片描述"> 新建一个文件，把这行后面的都cv过去，得到一个新压缩包，打开要我们输密码，提示是4number,直接暴力破解，可以得到密码，进入打开txt文件，得到flag<img src="https://img-blog.csdnimg.cn/93250cf141ee4c469cf9070b14bbd0fc.png" alt="在这里插入图片描述">#### 你竟然赶我走不知道要干啥，就用010打开压缩包里的图片，直接搜索flag,得到结果</p><h4 id="N种方法解决"><a href="#N种方法解决" class="headerlink" title="N种方法解决"></a>N种方法解决</h4><p>打开压缩包得到exe文件，开始不知道怎么办，网上找到就是找个文本编译器打开就行，刚好我下载的EditPlus直接用这个打开开到这样的文本，不知道干啥直接复制上网搜<img src="https://img-blog.csdnimg.cn/1a1cc2f9c9404900be7e09bacb89adb4.png" alt="在这里插入图片描述">得知这是base64和图片的互转码，直接找个<a href="https://tools.kalvinbg.cn/image/base64Image">base64图片在线网址 </a> 得到二维码，识别一下得到flag</p><h4 id="大白"><a href="#大白" class="headerlink" title="大白"></a>大白</h4><p>仔细看看图片什么也没有，看看提示，想想应该是要修改图片的宽和高，010打开直接改第二行的值，把图片改高一点，效果如下<img src="https://img-blog.csdnimg.cn/ddb178d2eb3f496b88357b675fe42c90.png" alt="在这里插入图片描述"> 得到flag</p><h4 id="基础破解"><a href="#基础破解" class="headerlink" title="基础破解"></a>基础破解</h4><p>打开压缩包里的压缩包，要我们输密码，提示是4位数字密码加密，直接暴力破解，得到密码</p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java（一）初识Java</title>
      <link href="/2022/04/09/Java%EF%BC%88%E4%B8%80%EF%BC%89%E5%88%9D%E8%AF%86Java/"/>
      <url>/2022/04/09/Java%EF%BC%88%E4%B8%80%EF%BC%89%E5%88%9D%E8%AF%86Java/</url>
      
        <content type="html"><![CDATA[<h3 id="学前准备"><a href="#学前准备" class="headerlink" title="学前准备"></a>学前准备</h3><p>首先是安装一个文本编译器，<a href="https://pan.baidu.com/s/1aBt82_cUv9xXXMjMdhUdcQ%C2%A0">EditPlus</a>，（提取码：xa36）这里是我找的中文版的，下载直接安装就可以了。<br>接着是一些简单的DOS命令：</p><pre><code>    - exit -退出当前DOS命令窗口    - cls -清屏    - dir -列出当前目录下所有的子文件/子目录    - cd 打开相应的文件目录            *格式： cd 目录的路径    - cd .. -回到上级目录    - cd \ -直接回到跟目录    - ipconfig -查看当前ip配置    - del *  -删除相应的文件</code></pre><p>Java是跨平台的，是纯面向对象的，更符合人的思维模式，更容易理解</p><h3 id="安装JDK"><a href="#安装JDK" class="headerlink" title="安装JDK"></a>安装JDK</h3><p>（一般在oracle的官网下载即可）</p><p>JDK目录介绍：<br>JDK&#x2F;bin: 该文件下存放了很多命令，例如javac.exe和java.exe<br>javac.exe         负责编译<br>java.exe           负责运行</p><h3 id="第一个Java程序"><a href="#第一个Java程序" class="headerlink" title="第一个Java程序"></a>第一个Java程序</h3><p>找个地方新建第一个.java 文件<br><img src="https://img-blog.csdnimg.cn/d9fad3db3e474af097188a15188d0520.png"></p><p>并用EditPlus打开，进行开发，看不懂，先照抄<br><img src="https://img-blog.csdnimg.cn/61c11fb5516d48bda6a7c1004a585d8f.png"></p><p>到这里我们已经开发完了HelloWorld.java源文件的开发，接着要用javac工具进行编译<br>要使用javac工具就要我们进行环境变量的配置，<br>简单的讲就是把javac所在的目录配置到系统环境变量path中。</p><h4 id="使用javac命令生成-class文件"><a href="#使用javac命令生成-class文件" class="headerlink" title="使用javac命令生成.class文件"></a>使用javac命令生成.class文件</h4><p>在DOS窗口中输入javac 文件所在目录，生成<br><img src="https://img-blog.csdnimg.cn/e9b9897e4eda43ce9ca5bb2c8c937651.png"></p><p><img src="https://img-blog.csdnimg.cn/cac732b4b1fd4c92a68a8af729745a02.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAc2VyZWlud2U=,size_20,color_FFFFFF,t_70,g_se,x_16"></p><h4 id="运行java程序"><a href="#运行java程序" class="headerlink" title="运行java程序"></a>运行java程序</h4><p>测试java命令是否可以用，在.java文件目录下运行java命令，看到输出一个结果，程序结束<br><img src="https://img-blog.csdnimg.cn/071d2fdeeb1d4eca851ed9d3b9051fa9.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAc2VyZWlud2U=,size_17,color_FFFFFF,t_70,g_se,x_16"></p><p> java命令：java 类名（注意不是文件全名，是类名，不带后面的.class）</p><h4 id="简单解释程序"><a href="#简单解释程序" class="headerlink" title="简单解释程序"></a>简单解释程序</h4><pre><code>    - 注释 -            出现在java的源程序中，对java源代码的解释说明            注释不会杯编译到.class字节码文件当中            注释可以增强程序的可读性，养成注释的习惯    - 单行注释 - // -            //单行注释，只注释当前行    - 多行注释 - /*  */ -            /*多行注释可以注释多行*/    - javadoc注释 - /** * * * */ -            /**            *        javadoc注释            *         javadoc注释            *         javadoc注释            */            这个注释信息会被javadoc.exe工具解析并生成帮助文档。</code></pre><p>&#x2F;&#x2F;class表示定义一个类<br>&#x2F;&#x2F;Helloworld表示一个类名<br>&#x2F;&#x2F;public表示公开的</p><p>public class Helloworld{&#x2F;&#x2F;定义一个公开的类，类名为Helloworld</p><pre><code>//类体【】//类体中不允许直接编写java语句【除声明变量之外】/*    public 表示公开的    static 表示静态的    void 表示空    main 表示方法名是main    (String[] args) 是一个main方法的形式参数列表*///以下的方法是一个程序的“主方法”，是程序的执行入口public static void main(String[] args)&#123;//表示定义一个公开的静态的主方法    //方法体【】    //方法体【】    //方法体【】    //java语句【java语句一“;”终止，分号必须是半角分号也就是英文下的分号】    //java中所有的“字符串”都使用双引号括起来，使用半角双引号    System.out.println(&quot;Hello World!&quot;);&#125;</code></pre><p>}</p><h4 id="public-class-和-class的区别："><a href="#public-class-和-class的区别：" class="headerlink" title="public class 和 class的区别："></a>public class 和 class的区别：</h4><pre><code>    * 一个java源文件当中可以定义多个class    * 一个java源文件当中public的class不是必须的    * 一个class会定义生成一个xxx.class字节码文件    * 一个java源文件当中定义公开的类型的话，public的class只能有一个，      并且该类名必须和java源文件名称一致    * 每一个class当中都可以编写main方法，都可以设定程序的入口。</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试篇</title>
      <link href="/2022/04/08/%E6%B5%8B%E8%AF%95%E7%AF%87/"/>
      <url>/2022/04/08/%E6%B5%8B%E8%AF%95%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<p>这里会显示为正文。</p><h2 id="这样加标题"><a href="#这样加标题" class="headerlink" title="这样加标题"></a>这样加标题</h2><p>段落与段落之间要有一个空行。</p><p>这样方便读者阅读。</p><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><blockquote><p>这样写引用，直接在句子前面加英文的 大于号 即 “&gt;”</p></blockquote><h3 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h3><p>在英文状态下输入两种括号，分别是：”[]“和“()”</p><p><a href="www.baidu.com">百度</a></p><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p>与超链接的区别就是在前面加了一个引文的 感叹号 即“!”</p><p>![百度上的风景图]</p><p>暂时有问题，先跳过</p><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><p>在行的前面加上 星号 * 就可以了</p><ul><li>像这样，那个星号就会变成一个点  </li><li>可以多写几个表示无序列表</li></ul><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><p>采用<font color =red>数字.</font>的形式表示有序列表</p><ol><li>像这样就是有序列表</li><li>这样可以使文章更有条理按回车就会自动向后面排序列了，再按回车可取消序列排序</li></ol><h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><hr><hr><p>像上面这样的分割线需要我们用三个及三个以上的短杠或者星号就可以做到</p><h3 id="代码测试"><a href="#代码测试" class="headerlink" title="代码测试"></a>代码测试</h3><pre><code>这里是第一行第二第三</code></pre><p>现在结束代码</p><p>由于前面的失误，导致文件无法更新到远程库，所以我写一句话，来测试一下看看有没有更新。</p><h3 id="网易云音乐测试"><a href="#网易云音乐测试" class="headerlink" title="网易云音乐测试"></a>网易云音乐测试</h3><p>测试成功</p>]]></content>
      
      
      
        <tags>
            
            <tag> Typora </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
